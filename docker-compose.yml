version: '3'

volumes:
  pg_data:
  pgadmin_data:
  redis_data:
  static:
  media:

services:
  db_postgres:
    container_name: db_payment
    image: postgres:14-alpine
    env_file: .env
    volumes:
      - ./postgres/init_db:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
      - ./postgres/root:/root
    ports:
      - "15432:5432"
    restart: always


#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4:latest
#    env_file: .env
#    environment:
#      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
#      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
#
#    depends_on:
#      - db_postgres
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    restart: always
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 1G

  redis:
    container_name: redis_payment
    image: redis:7.4
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    env_file: .env
    restart: unless-stopped
#    ports:
#      - "6379:6379"
    volumes:
      - redis_data:/data


  backend:
    build: ./backend_payment
    restart: always
    env_file: .env
    depends_on:
      db_postgres:
        condition: service_started
        restart: false
      celery:
        condition: service_started
        restart: false
    volumes:
      - static:/app/collected_static/
      - media:/app/media/
      - ./logs:/app/logs
      - ./backend_payment:/app
    entrypoint: bash /app/entrypoint.sh

  celery:
    build: ./backend_payment
    restart: unless-stopped
    command: celery -A backend_payment worker -l warning -n myworker1  --concurrency=16  --logfile logs/celery_file.log
    env_file: .env
    volumes:
      - media:/app/media/
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_started
        restart: false

  celery_high:
    container_name: celery_payment2
    build: ./backend_payment
    restart: always
    command: celery -A backend_payment worker -l warning  -n myworker -Q high --concurrency=4 --logfile=logs/celery.log
    volumes:
      - media:/app/media/
      - ./logs:/app/logs
    env_file: .env
    depends_on:
      redis:
        condition: service_started
        restart: false

  celery-beat:
    build: ./backend_payment
    command: celery -A backend_payment beat -l info -S django
    env_file: .env
    depends_on:
      - celery

  nginx:
    build: ./nginx
    env_file: .env
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_started
        restart: false
    volumes:
      #- ./nginx.conf:/etc/nginx/conf.d:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - static:/app/static
      - media:/app/media

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  flower:
    container_name: flower
    image: mher/flower
    build: ./backend_payment
    command: celery -A backend_payment.celery flower --port=5555 --basic-auth=Maniac:password1
    ports:
      - 5556:5555
    env_file: .env
    depends_on:
      - backend
      - redis
      - celery